---
kind: "Template"
apiVersion: "v1"
metadata:
  name: "Wordpress Template"
  annotations:
    openshift.io/display-name: "Wordpress"
    tags: "php,wordpress"
    iconClass: "icon-shadowman"
    template.openshift.io/provider-display-name: "Red Hat, Inc."
message: "The following service(s) have been created in your project: ${NAME}."
labels:
  template: "wordpress-website"
objects:
  ################################################
  # Wordpress PHP ################################
  - kind: "Service"
    apiVersion: "v1"
    metadata:
      name: "${NAME}"
      annotations:
        description: "Exposes and load balances the frontend application pods"
      labels:
        app: "${NAME}"
    spec:
      ports:
        - name: "https"
          port: 8443
          targetPort: 8080
      selector:
        name: "${NAME}"

  - kind: "Route"
    apiVersion: "v1"
    metadata:
      name: "${NAME}"
      labels:
        app: "${NAME}"
    spec:
      host: "${APPLICATION_DOMAIN}"
      to:
        kind: "Service"
        name: "${NAME}"
        weight: 1
      port:
        targetPort: "https"
      tls:
        termination: "edge"
        insecureEdgeTerminationPolicy: "Redirect"

  - kind: "ImageStream"
    apiVersion: "v1"
    metadata:
      name: "${NAME}"
      annotations:
        description: "Keeps track of changes in the ${NAME} application image"
      labels:
        app: "${NAME}"

  - kind: "BuildConfig"
    apiVersion: "v1"
    metadata:
      name: "${NAME}"
      annotations:
        description: "Defines how to build ${NAME} for deployment"
      labels:
        app: "${NAME}"
    spec:
      nodeSelector:
      strategy:
        type: "Source"
        sourceStrategy:
          from:
            kind: "ImageStreamTag"
            namespace: "${NAMESPACE}"
            name: "php:7.0"
      output:
        to:
          kind: "ImageStreamTag"
          name: "${NAME}:latest"
      triggers:
        - type: "ConfigChange"

  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: "${NAME}-volume"
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${WORDPRESS_VOLUME_CAPACITY}

  - kind: "DeploymentConfig"
    apiVersion: "v1"
    metadata:
      name: "${NAME}"
      annotations:
        description: "Defines how to deploy ${APPLICATION_DOMAIN}"
      labels:
        app: "${NAME}"
    spec:
      strategy:
        type: "Recreate"
      triggers:
        - type: "ImageChange"
          imageChangeParams:
            automatic: true
            containerNames:
              - "${NAME}"
            from:
              kind: "ImageStreamTag"
              name: "${NAME}:latest"
        - type: "ConfigChange"
      replicas: 1
      test: false
      selector:
        name: "${NAME}"
      template:
        metadata:
          name: "${NAME}"
          labels:
            name: "${NAME}"
            app: "${NAME}"
        spec:
          containers:
            - name: "${NAME}"
              evn:
                name: "DOCUMENTROOT"
                value: "/wp-content"
              ports:
                - containerPort: 8080
              resources:
                requests:
                  cpu: "${CPU_REQUEST}"
                  memory: "${MEMORY_REQUEST}"
                limits:
                  cpu: "${CPU_LIMIT}"
                  memory: "${MEMORY_LIMIT}"
              volumeMounts:
              - mountPath: /opt/app-root/src/wp-content
                name: "wordpress-data"
          volumes:
          - name: "wordpress-data"
            persistentVolumeClaim:
              claimName: "${NAME}-volume"

  ################################################
  ################################################

  ################################################
  # MySQL Persistent##############################
  - apiVersion: v1
    kind: Secret
    metadata:
      annotations:
        template.openshift.io/expose-database_name: '{.data[''database-name'']}'
        template.openshift.io/expose-password: '{.data[''database-password'']}'
        template.openshift.io/expose-root_password: '{.data[''database-root-password'']}'
        template.openshift.io/expose-username: '{.data[''database-user'']}'
      name: ${DATABASE_SERVICE_NAME}
    stringData:
      database-name: ${MYSQL_DATABASE}
      database-password: ${MYSQL_PASSWORD}
      database-root-password: ${MYSQL_ROOT_PASSWORD}
      database-user: ${MYSQL_USER}

  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        template.openshift.io/expose-uri: mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="mysql")].port}
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: mysql
        port: 3306
      selector:
        name: ${DATABASE_SERVICE_NAME}

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${DATABASE_SERVICE_NAME}
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${DATABASE_SERVICE_NAME}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${DATABASE_SERVICE_NAME}
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-root-password
                  name: ${DATABASE_SERVICE_NAME}
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: ${DATABASE_SERVICE_NAME}
            image: ' '
            imagePullPolicy: IfNotPresent
            livenessProbe:
              initialDelaySeconds: 30
              tcpSocket:
                port: 3306
              timeoutSeconds: 1
            name: mysql
            ports:
            - containerPort: 3306
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE
                  -e 'SELECT 1'
              initialDelaySeconds: 5
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${MYSQL_MEMORY_LIMIT}
            volumeMounts:
            - mountPath: /var/lib/mysql/data
              name: ${DATABASE_SERVICE_NAME}-data
          volumes:
          - name: ${DATABASE_SERVICE_NAME}-data
            persistentVolumeClaim:
              claimName: ${DATABASE_SERVICE_NAME}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - mysql
          from:
            kind: ImageStreamTag
            name: mysql:${MYSQL_VERSION}
            namespace: ${NAMESPACE}
        type: ImageChange
      - type: ConfigChange

  ################################################
  ################################################

parameters:
  - name: "NAME"
    displayName: "Application name"
    description: "The name assigned to all of the application components defined in this template."
    required: true

  - name: "APPLICATION_DOMAIN"
    displayName: "Application Hostname"
    description: "The exposed hostname that will route to the PHP service."

  - name: "SOURCE_REPOSITORY_URL"
    displayName: "Git Repository URL"
    description: "The URL of the repository with your application source code."
    required: true
    value: "git@github.com:openshift-cs/wordpress-migration.git"

  - name: "SOURCE_REPOSITORY_REF"
    displayName: "Git Reference"
    description: "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
    value: 4.9.2

  - name: "CONTEXT_DIR"
    displayName: "Context Directory"
    description: "Set this to the relative path to your project if it is not in the root of your repository."

  - name: "CPU_REQUEST"
    displayName: "CPU Request"
    description: "Requested amount of cpu the PHP container will use."
    required: true
    value: "200m"

  - name: "CPU_LIMIT"
    displayName: "CPU Limit"
    description: "Maximum amount of cpu the PHP container can use."
    required: true
    value: "2"

  - name: "MEMORY_REQUEST"
    displayName: "Memory Request"
    description: "Requested amount of memory the PHP container will use."
    required: true
    value: "1Gi"

  - name: "MEMORY_LIMIT"
    displayName: "Memory Limit"
    description: "Maximum amount of memory the PHP container can use."
    required: true
    value: "2Gi"

  - name: "NAMESPACE"
    displayName: "Namespace"
    description: "The OpenShift Namespace where the Ruby s2i builder ImageStream resides."
    required: true
    value: "openshift"

  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Wordpress Volume Capacity
    name: WORDPRESS_VOLUME_CAPACITY
    required: true
    value: 10Gi

  ## MySQL ##
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MYSQL_MEMORY_LIMIT
    required: true
    value: 512Mi

  - description: The name of the OpenShift Service exposed for the database.
    displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: mysql

  - description: Username for MySQL user that will be used for accessing the database.
    displayName: MySQL Connection Username
    from: user[A-Z0-9]{3}
    generate: expression
    name: MYSQL_USER
    required: true

  - description: Password for the MySQL connection user.
    displayName: MySQL Connection Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: MYSQL_PASSWORD
    required: true

  - description: Password for the MySQL root user.
    displayName: MySQL root user Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: MYSQL_ROOT_PASSWORD
    required: true

  - description: Name of the MySQL database accessed.
    displayName: MySQL Database Name
    name: MYSQL_DATABASE
    required: true
    value: wordpress

  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 10Gi

  - description: Version of MySQL image to be used (5.5, 5.6, 5.7, or latest).
    displayName: Version of MySQL Image
    name: MYSQL_VERSION
    required: true
    value: "5.5"
